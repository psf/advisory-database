{
  "modified": "2023-08-28T16:57:11Z",
  "published": "2023-08-24T00:00:00Z",
  "schema_version": "1.5.0",
  "id": "PSF-2023-8",
  "aliases": [
    "CVE-2023-40217"
  ],
  "summary": "Bypass TLS handshake on closed sockets",
  "details": "Instances of `ssl.SSLSocket` are vulnerable to a bypass of the TLS handshake and included protections (like certificate verification) and treating sent unencrypted data as if it were post-handshake TLS encrypted data.\n\nThe vulnerability is caused when a socket is connected, data is sent by the malicious peer and stored in a buffer, and then the malicious peer closes the socket within a small timing window before the other peers’ TLS handshake can begin. After this sequence of events the closed socket will not immediately attempt a TLS handshake due to not being connected but will also allow the buffered data to be read as if a successful TLS handshake had occurred.\n\n### Affected usages\n\nThis vulnerability **primarily affects** HTTPS servers and other server-side protocols using TLS client authentication due to requiring reading data immediately after the handshake to be vulnerable. Operations which would fail on a closed socket (like sending data) immediately after the handshake **are not affected by this vulnerability.**\n\nBecause disconnecting the socket is a necessary step to trigger the vulnerability **there is no risk of data exfiltration or data leakage directly from the malicious TLS connection**, however the vulnerability does carry risk for modifying or deleting resources which are authenticated using only TLS client certificates.\n\nThis vulnerability **affects** clients who are reading and processing data from the server after a TLS handshake without sending any data first. Our team is unaware of a protocol that uses TLS that fits this usage pattern.\n\nThis vulnerability **does not affect** client-side HTTPS connections like pip or requests as an HTTP request must be sent before an HTTP response is read meaning the connection would already be closed by the time the client is sending an HTTP request, leading to an error.\n\nThis vulnerability **affects, but has no impact** on servers that aren’t using TLS client certificate authentication as traffic to a non-authenticating TLS server loses nothing from a bypassed handshake to inject a query and close the connection as the same action could be taken by a peer using a TLS connection with a proper handshake.",
  "affected": [
    {
      "ranges": [
        {
          "type": "GIT",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "b4bcc06a9cfe13d96d5270809d963f8ba278f89b"
            },
            {
              "fixed": "264b1dacc67346efa0933d1e63f622676e0ed96b"
            },
            {
              "fixed": "37d7180cb647f0bed0c1caab0037f3bc82e2af96"
            },
            {
              "fixed": "75a875e0df0530b75b1470d797942f90f4a718d3"
            },
            {
              "fixed": "256586ab8776e4526ca594b4866b9a3492e628f1"
            },
            {
              "fixed": "0cb0c238d520a8718e313b52cffc356a5a7561bf"
            }
          ],
          "repo": "https://github.com/python/cpython"
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/PEPLII27KYHLF4AK3ZQGKYNCRERG4YXY/"
    },
    {
      "type": "WEB",
      "url": "https://github.com/python/cpython/issues/108310"
    },
    {
      "type": "WEB",
      "url": "https://github.com/python/cpython/pull/108315"
    }
  ],
  "credits": [
    {
      "name": "Aapo Oksman",
      "type": "FINDER"
    },
    {
      "name": "Gregory P. Smith",
      "type": "REMEDIATION_DEVELOPER"
    },
    {
      "name": "Thomas Wouters",
      "type": "REMEDIATION_REVIEWER"
    },
    {
      "name": "Seth Michael Larson",
      "type": "COORDINATOR"
    }
  ]
}
